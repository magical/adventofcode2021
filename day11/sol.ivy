
op n north m = (rho m) rho n flip m,(abs n,(rho m)[1]) rho 0
op n west m = transp n north transp m
op n shift m = n[1] north n[2] west m

op halo m = ((1 1 shift m) + (1 0 shift m) + (1 -1 shift m) + (0 -1 shift m) + (-1 -1 shift m) + (-1 0 shift m) + (-1 1 shift m) + (0 1 shift m))

op any m = or/ ,m
op sum m = +/ ,m

nflash = 0
op spent flash m =
    flashing = (m > 9) and not spent
    not any flashing: m * not spent
    nflash = nflash + sum flashing
    (spent or flashing) flash (m + halo flashing)

op step m = ((rho m) rho 0) flash 1 + m
op n step m =
    n == 0: m
    (n - 1) step step m

sample = 10 10 rho 5 4 8 3 1 4 3 2 2 3   2 7 4 5 8 5 4 7 1 1   5 2 6 4 5 5 6 1 7 3   6 1 4 1 3 3 6 1 4 6   6 3 5 7 3 8 5 4 7 8   4 1 6 7 5 2 4 6 4 5   2 1 7 6 8 4 1 7 2 1   6 8 8 2 8 8 1 1 3 4   4 8 4 6 8 4 8 5 5 4   5 2 8 3 7 5 1 5 2 6

--10 10 rho 0 flash sample

op all m = and/ ,m

op n sync m = all m == 0: n; (n+1) sync step m
op sync m = 1 sync m
